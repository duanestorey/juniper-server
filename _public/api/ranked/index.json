[{"id":2,"site_id":1,"type":"plugin","name":"WP API Privacy","slug":"wp-privacy\/wp-api-privacy","author_name":"Duane Storey","author_url":"https:\/\/github.com\/wp-privacy","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/187593277?v=4","description":"Strips potentially identifying information from outbound requests to the WordPress.org API","readme":"<h1>WP API Privacy<\/h1>\n<p>The default WordPress installation from wordpress.org automatically transmits extraneous information via various HTTP calls that occur in the admin. Some of this data may be cause for concern from a privacy perspective. <\/p>\n<p>This plugin seeks to limit that information, attempting to further protect your privacy in the process. Simply install this plugin and activate it, and various aspects of WordPress that\nare questionable from a privacy perspective will be modified.  <\/p>\n<p>To find out about recent changes, please <a href=\"CHANGELOG.md\">read the Changelog<\/a>.<\/p>\n<h2>Modifications Made<\/h2>\n<p>Default outgoing HTTP requests to third-party services like the plugin and theme update mechanism at WordPress.org contains site and version information in the User-Agent header.  For example, all requests contain your website name in the form of <a href=\"http:\/\/mysite.com\">http:\/\/mysite.com<\/a>, and a version string such as 6.6, giving third-parties detailed information about your site.  Combining this information with your IP address (which all servers can determine from incoming requests), provides the recipient with potentially intrusive insight into every website using the WordPress platform. <\/p>\n<p>Once active, the plugin strips can be configured to strip this information so requests do not contain information about the domain name that requested them or which version of WordPress it was using.  Some API calls, such as the ones to the plugin listings, also contain a version parameter to filter the associated list of plugins - these are left in.<\/p>\n<h3>Plugin And Theme Data<\/h3>\n<p>When a default WordPress installation contains WordPress.org requests information about plugin and theme updates, it sends detailed information about every plugin and theme on your WordPress site, including all the plugin and theme headers available.  This occurs even for private plugins or themes, or plugins and themes that are not hosted on WordPress.org.<\/p>\n<p>After activation, any plugins or themes that update from third-party repositories (as indicated by the <em>Update URI<\/em> in the plugin header) will be filtered on all outbound requests.<\/p>\n<h3>Core Requests<\/h3>\n<p>When WordPress attempts to do a core software update, it sends along detailed information such as your site URL, how many users you have, how many blogs you have, your MySQL version, your PHP version, the type of server you have (i.e Mac, Linux, Windows, etc) and all the PHP extensions you have on your site.  This information can also be selectively filtered to only provide what's absolutey essential to the WordPress API servers.<\/p>\n<h2>Installation<\/h2>\n<p>You can install the package either via a ZIP file, or by using composer.  Please note, this plugin is still in active development - please don't install it on any production sites, but feel free to test it on development or less essential sites to help provide feedback. <\/p>\n<h3>ZIP File<\/h3>\n<p>Navigate to the &quot;Releases&quot; <a href=\"https:\/\/github.com\/wp-privacy\/wp-api-privacy\/releases\/latest\">section in the sidebar<\/a>, and click on the latest release.  Inside the release you will see a ZIP file that looks like\n<em>wp-api-privacy.zip<\/em>.  Simply download that file and then use the WordPress plugin installer in the admin panel to add it.<\/p>\n<h3>Composer<\/h3>\n<p>You can add the plugin to your website using Composer.  First navigate to your main WordPress directory. <\/p>\n<p>The execute the command:<\/p>\n<pre><code>composer require wp-privacy\/wp-api-privacy<\/code><\/pre>\n<p>This will install the plugin to your wp-content\/plugins directory.  Once done, navigate to your plugins page in the WordPress admin panel and activate the plugin.<\/p>\n<h3>Future Updates<\/h3>\n<p>The plugin will automatically fetch updates via the WordPress admin from this Github repository using the WordPress update mechanism (you will be notified in the admin when an update\nis available).<\/p>\n<h2>Verification<\/h2>\n<p>After installing the plugin, you can also use the &quot;HTTP Requests Manager&quot; plugin to verify the user-agent field has been changed to &quot;WordPress\/Private&quot;, and that the plugin information\nis stripped of any plugins hosted off-site.<\/p>","stable_version":"1.2.2","repo_version":"1.2.2","banner_image_url":"https:\/\/raw.githubusercontent.com\/wp-privacy\/wp-api-privacy\/refs\/heads\/main\/assets\/banner-1544x500.jpg","requires_php":"6.0","requires_at_least":"6.0","tested_up_to":"6.7","signing_authority":"https:\/\/duanestorey.com","open_issues_count":0,"stars_count":154,"total_downloads":1422,"updated_at":1734978633,"created_at":1734978633},{"id":7,"site_id":2,"type":"plugin","name":"BenchPress","slug":"robertdevore\/benchpress","author_name":"Robert DeVore","author_url":"https:\/\/github.com\/robertdevore","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/9917957?v=4","description":"A tool for benchmarking PHP code snippets and WordPress\u00ae queries to help developers optimize performance.","readme":"<h1>BenchPress<\/h1>\n<p><strong>BenchPress<\/strong> is a WordPress\u00ae plugin for benchmarking PHP code snippets, WordPress\u00ae queries, and other critical operations. <\/p>\n<p>It's designed to help developers evaluate and optimize code performance by running benchmarks and capturing snapshots for later comparison.<\/p>\n<hr \/>\n<h2>Table of Contents<\/h2>\n<ul>\n<li><a href=\"#installation\">Installation<\/a><\/li>\n<li><a href=\"#setup\">Setup<\/a><\/li>\n<li><a href=\"#usage\">Usage<\/a><\/li>\n<li><a href=\"#available-benchmarks\">Available Benchmarks<\/a><\/li>\n<li><a href=\"#customizing-benchmarks\">Customizing Benchmarks<\/a><\/li>\n<li><a href=\"#snapshots\">Snapshots<\/a><\/li>\n<li><a href=\"#plugin-settings\">Plugin Settings<\/a><\/li>\n<li><a href=\"#contributing\">Contributing<\/a><\/li>\n<li><a href=\"#license\">License<\/a><\/li>\n<li>\n<ul>\n<li>*<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h2>Installation<\/h2>\n<ol>\n<li><strong>Download<\/strong> the plugin ZIP from the <a href=\"https:\/\/github.com\/robertdevore\/benchpress\">GitHub repository<\/a>.<\/li>\n<li><strong>Upload<\/strong> it via WordPress\u00ae Admin:\n<ul>\n<li>Go to <code>Plugins<\/code> &gt; <code>Add New<\/code>.<\/li>\n<li>Click <code>Upload Plugin<\/code>, select the downloaded ZIP, and click <code>Install Now<\/code>.<\/li>\n<\/ul><\/li>\n<li><strong>Activate<\/strong> the plugin via the <code>Plugins<\/code> page in the WordPress\u00ae Admin.\n<hr \/><\/li>\n<\/ol>\n<h2>Setup<\/h2>\n<p>BenchPress automatically creates a custom database table to store snapshots of benchmark results on activation. The plugin also includes settings to customize benchmark runs. To configure these:<\/p>\n<ol>\n<li>Go to <code>BenchPress &gt; Settings<\/code> in your WordPress\u00ae admin sidebar.<\/li>\n<li>Adjust loop counts, post IDs, and other options to customize how each benchmark runs.<\/li>\n<\/ol>\n<hr \/>\n<h2>Usage<\/h2>\n<p>Once installed and configured, you can run benchmarks, view results, and save snapshots for later reference:<\/p>\n<ol>\n<li>\n<p><strong>Running Benchmarks<\/strong>:<\/p>\n<ul>\n<li>Navigate to <code>BenchPress<\/code> in your WordPress\u00ae admin menu.<\/li>\n<li>Click <code>Refresh Tests<\/code> to run all enabled benchmarks and view results.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Saving Snapshots<\/strong>:<\/p>\n<ul>\n<li>On the main <code>BenchPress<\/code> page, click <code>Save Snapshot<\/code> to save a record of the current benchmark results.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Viewing Snapshots<\/strong>:<\/p>\n<ul>\n<li>Go to <code>BenchPress &gt; Snapshots<\/code> to view all saved snapshots. Each snapshot can be viewed, downloaded, or deleted.<\/li>\n<li>\n<ul>\n<li>*<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/li>\n<\/ol>\n<h2>Available Benchmarks<\/h2>\n<p>BenchPress comes with several built-in benchmarks. Here's a quick overview:<\/p>\n<ul>\n<li><strong>Switch vs. Match<\/strong>: Compares the performance of PHP <code>switch<\/code> vs <code>match<\/code> statements.<\/li>\n<li><strong>Transient vs. Direct Query<\/strong>: Tests the speed of transient caching against direct database queries.<\/li>\n<li><strong>Post Meta Access<\/strong>: Compares <code>get_post_meta()<\/code> with <code>WP_Meta_Query<\/code> for retrieving post meta data.<\/li>\n<li><strong>WP_Query by ID<\/strong>: Measures query performance for retrieving single or multiple posts.<\/li>\n<li><strong>Array Merge vs. Union<\/strong>: Compares <code>array_merge<\/code> with the array union (<code>+<\/code>) operator.<\/li>\n<li><strong>String Concatenation<\/strong>: Benchmarks PHP's <code>.<\/code> operator vs <code>sprintf<\/code>.<\/li>\n<li>\n<ul>\n<li>*<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h2>Customizing Benchmarks<\/h2>\n<h3>Adding Custom Benchmarks<\/h3>\n<p>BenchPress includes a <code>benchpress_run_all_benchmarks<\/code> filter to allow you to add custom benchmarks. Here's an example of how to add your own benchmark:<\/p>\n<pre><code>add_filter( 'benchpress_run_all_benchmarks', function( $benchmarks ) {\n    \/\/ Define your custom benchmark\n    $benchmarks[] = custom_benchmark_example();\n    return $benchmarks;\n});\n\n\/\/ Custom benchmark function\nfunction custom_benchmark_example() {\n    $loop_count = get_option( 'custom_benchmark_loop_count', 100000 );\n    $start_time = microtime( true );\n\n    for ( $i = 0; $i &lt; $loop_count; $i++ ) {\n        $result = $i * 2; \/\/ Example operation\n    }\n\n    $execution_time = microtime( true ) - $start_time;\n\n    return [\n        'name'          =&gt; esc_html__( 'Custom Benchmark', 'benchpress' ),\n        'execution_time'=&gt; round( $execution_time, 5 ),\n        'description'   =&gt; sprintf( esc_html__( 'Executed a loop of %d iterations.', 'benchpress' ), $loop_count ),\n    ];\n}<\/code><\/pre>\n<h3>Removing Benchmarks<\/h3>\n<p>If you want to remove a specific benchmark, you can use the same <code>benchpress_run_all_benchmarks<\/code> filter. For example, to remove the &quot;Switch vs Match&quot; benchmark:<\/p>\n<pre><code>add_filter( 'benchpress_run_all_benchmarks', function( $benchmarks ) {\n    return array_filter( $benchmarks, function( $benchmark ) {\n        return $benchmark['name'] !== esc_html__( 'Switch vs Match', 'benchpress' );\n    });\n});<\/code><\/pre>\n<h3>Accessing Benchmark Data<\/h3>\n<p>To access saved snapshots for analysis or custom display, use the custom database table created by BenchPress, which stores each snapshot as JSON data.<\/p>\n<hr \/>\n<h2>Snapshots<\/h2>\n<p>Snapshots are records of benchmark results that you can refer back to later. Snapshots can be managed in the <code>BenchPress &gt; Snapshots<\/code> page:<\/p>\n<ul>\n<li><strong>Clear Snapshots<\/strong>: Clears all stored snapshots.<\/li>\n<li><strong>Download Snapshots<\/strong>: Downloads all snapshots as a CSV file.<\/li>\n<li>\n<ul>\n<li>*<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h2>Plugin Settings<\/h2>\n<p>To configure BenchPress benchmarks, navigate to <code>BenchPress &gt; Settings<\/code>. Options include:<\/p>\n<ul>\n<li><strong>Loop Count for Benchmarks<\/strong>: Set the number of iterations for each benchmark.<\/li>\n<li><strong>Enable Benchmarks<\/strong>: Select which benchmarks to run.<\/li>\n<li><strong>WP_Query Settings<\/strong>: Configure <code>WP_Query<\/code> options, including post types, IDs, taxonomy terms, etc.<\/li>\n<li>\n<ul>\n<li>*<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h2>Contributing<\/h2>\n<p>BenchPress is an open-source project, and contributions are welcome! <\/p>\n<p>To contribute:<\/p>\n<ol>\n<li><strong>Fork<\/strong> the repository.<\/li>\n<li><strong>Create<\/strong> a new branch for your feature or fix.<\/li>\n<li><strong>Submit<\/strong> a pull request with a clear description of your changes.\n<hr \/><\/li>\n<\/ol>","stable_version":"1.1.0","repo_version":"1.1.0","banner_image_url":"","requires_php":"","requires_at_least":"","tested_up_to":"","signing_authority":"","open_issues_count":1,"stars_count":47,"total_downloads":0,"updated_at":1734978633,"created_at":1734978633},{"id":8,"site_id":2,"type":"plugin","name":"Block Usage Tracker","slug":"robertdevore\/block-usage-tracker","author_name":"Robert DeVore","author_url":"https:\/\/github.com\/robertdevore","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/9917957?v=4","description":"A plugin that lists active blocks on the site and counts their usage.","readme":"<h1>Block Usage Tracker<\/h1>\n<p><strong>Block Usage Tracker<\/strong> is a WordPress\u00ae admin tool designed to help content managers and developers monitor block usage across a site. <\/p>\n<p>The plugin lists each block type used in posts, counting the total occurrences and shows direct links to each post where a block appears. <\/p>\n<p>This functionality helps teams optimize content, understand block usage patterns, and maintain consistency.<\/p>\n<h2>Features<\/h2>\n<ul>\n<li>Lists all active blocks across posts and their usage counts.<\/li>\n<li>Displays links to each page\/post where blocks are used.<\/li>\n<li>Excludes duplicate links for better readability.<\/li>\n<li>Caches block usage data for efficient, optimized performance.<\/li>\n<li>User-friendly modal interface for viewing detailed block usage by post.<\/li>\n<li>Designed with proper security and access restrictions.<\/li>\n<\/ul>\n<h2>Installation<\/h2>\n<h3>From the WordPress\u00ae Admin Dashboard<\/h3>\n<ol>\n<li>Download the latest release from <a href=\"https:\/\/github.com\/robertdevore\/block-usage-tracker\">GitHub<\/a>.<\/li>\n<li>In your WordPress\u00ae dashboard, go to <strong>Plugins &gt; Add New<\/strong>.<\/li>\n<li>Click <strong>Upload Plugin<\/strong> and choose the downloaded ZIP file.<\/li>\n<li>Install and activate the plugin.<\/li>\n<\/ol>\n<h3>Manual Installation<\/h3>\n<ol>\n<li>Download the plugin files and extract the ZIP.<\/li>\n<li>Upload the extracted folder to <code>\/wp-content\/plugins\/block-usage-tracker<\/code>.<\/li>\n<li>Activate the plugin through the <strong>Plugins<\/strong> menu in WordPress\u00ae.<\/li>\n<\/ol>\n<h2>Usage<\/h2>\n<ol>\n<li>Once activated, go to <strong>Settings &gt; Block Usage Tracker<\/strong> in your WordPress\u00ae admin.<\/li>\n<li>You'll see a table with each block type, its total usage count, and a <strong>View Details<\/strong> button.<\/li>\n<li>Click <strong>View Details<\/strong> for any block to open a modal with links to each post where that block is used.<\/li>\n<\/ol>\n<h2>Contributing<\/h2>\n<p>We welcome contributions to improve <strong>Block Usage Tracker<\/strong>! Here's how you can help:<\/p>\n<ol>\n<li>Fork the repository.<\/li>\n<li>Create a new branch (<code>git checkout -b feature-branch-name<\/code>).<\/li>\n<li>Commit your changes (<code>git commit -am 'Add new feature or fix'<\/code>).<\/li>\n<li>Push to the branch (<code>git push origin feature-branch-name<\/code>).<\/li>\n<li>Open a pull request.<\/li>\n<\/ol>\n<p>For bug reports or feature requests, please open an issue in this repository.<\/p>","stable_version":"1.0.0","repo_version":"1.0.0","banner_image_url":"","requires_php":"","requires_at_least":"","tested_up_to":"","signing_authority":"","open_issues_count":1,"stars_count":22,"total_downloads":0,"updated_at":1734978633,"created_at":1734978633},{"id":11,"site_id":2,"type":"plugin","name":"Content Restriction for WordPress\u00ae","slug":"robertdevore\/content-restriction-for-wordpress","author_name":"Robert DeVore","author_url":"https:\/\/github.com\/robertdevore","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/9917957?v=4","description":"Enables role-based content restriction by post type, taxonomy term, or individual post\/page, redirecting unauthorized users to login when needed.","readme":"<h1>Content Restriction for WordPress\u00ae<\/h1>\n<p>Enables role-based content restriction by post type, taxonomy term, or individual post\/page, redirecting unauthorized users to login when needed.<\/p>\n<h2>Description<\/h2>\n<p><strong>Content Restriction for WordPress\u00ae<\/strong> allows administrators to restrict access to content based on user roles. <\/p>\n<p>You can set restrictions globally for post types and taxonomy terms or individually for posts and pages. Unauthorized users will be redirected to the login page or see a customizable message if they try to access restricted content.<\/p>\n<h2>Features<\/h2>\n<ul>\n<li><strong>Restrict by Post Type or Taxonomy Term<\/strong>: Globally restrict content based on post types and taxonomy terms.<\/li>\n<li><strong>Individual Post\/Page Restrictions<\/strong>: Restrict specific posts or pages with custom role requirements.<\/li>\n<li><strong>Role-Based Access Control<\/strong>: Set minimum user roles required to view content.<\/li>\n<li><strong>Automatic Redirection<\/strong>: Redirect unauthorized users to the login page.<\/li>\n<li><strong>Customizable Messages<\/strong>: Display custom messages for restricted content.<\/li>\n<li><strong>REST API and RSS Feed Integration<\/strong>: Content restrictions are respected in REST API responses and RSS feeds.<\/li>\n<\/ul>\n<h2>Installation<\/h2>\n<ol>\n<li>\n<p><strong>Download the Plugin<\/strong>: Clone or download the plugin from the <a href=\"https:\/\/github.com\/robertdevore\/content-restriction-for-wordpress\/\">GitHub repository<\/a>.<\/p>\n<\/li>\n<li>\n<p><strong>Upload to WordPress\u00ae<\/strong>:<\/p>\n<ul>\n<li>Navigate to <strong>Plugins<\/strong> &gt; <strong>Add New<\/strong> in your WordPress\u00ae admin dashboard.<\/li>\n<li>Click on <strong>Upload Plugin<\/strong> and select the downloaded ZIP file.<\/li>\n<li>Click <strong>Install Now<\/strong> and then <strong>Activate<\/strong> the plugin.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Via FTP<\/strong> (Alternative):<\/p>\n<ul>\n<li>Upload the plugin folder to the <code>\/wp-content\/plugins\/<\/code> directory.<\/li>\n<li>Activate the plugin through the <strong>Plugins<\/strong> menu in WordPress\u00ae.<\/li>\n<\/ul>\n<\/li>\n<\/ol>\n<h2>Usage<\/h2>\n<h3>Global Content Restrictions<\/h3>\n<ol>\n<li>\n<p><strong>Access Settings<\/strong>:<\/p>\n<ul>\n<li>Go to <strong>Settings<\/strong> &gt; <strong>Content Restriction<\/strong> in the WordPress\u00ae admin dashboard.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Add a Restriction<\/strong>:<\/p>\n<ul>\n<li>Click on the <strong>Add Restriction<\/strong> button.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Configure Restriction<\/strong>:<\/p>\n<ul>\n<li><strong>Restrict content by<\/strong>: Select a <strong>Post Type<\/strong> or <strong>Taxonomy Term<\/strong> to restrict.<\/li>\n<li><strong>Role<\/strong>: Choose the minimum user role required to access the content.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Save Changes<\/strong>:<\/p>\n<ul>\n<li>Click the <strong>Save Changes<\/strong> button to apply the restrictions.<\/li>\n<\/ul>\n<\/li>\n<\/ol>\n<h3>Individual Content Restrictions<\/h3>\n<ol>\n<li>\n<p><strong>Edit Post\/Page<\/strong>:<\/p>\n<ul>\n<li>Open the post or page you want to restrict in the editor.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Restrict Content Metabox<\/strong>:<\/p>\n<ul>\n<li>In the <strong>Restrict Content<\/strong> metabox (usually located in the sidebar), check <strong>Restrict this content<\/strong>.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Select Minimum Role<\/strong>:<\/p>\n<ul>\n<li>Choose the minimum user role required from the dropdown menu.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Update Post\/Page<\/strong>:<\/p>\n<ul>\n<li>Click <strong>Update<\/strong> or <strong>Publish<\/strong> to save your changes.<\/li>\n<\/ul>\n<\/li>\n<\/ol>\n<h3>Behavior for Unauthorized Users<\/h3>\n<ul>\n<li><strong>Logged-Out Users<\/strong>:\n<ul>\n<li>Redirected to the login page when accessing restricted content.<\/li>\n<\/ul><\/li>\n<li><strong>Logged-In Users Without Required Role<\/strong>:\n<ul>\n<li>See a message: &quot;This content is restricted. Please log in to view it.&quot;<\/li>\n<\/ul><\/li>\n<\/ul>\n<h2>Filters and Actions<\/h2>\n<h3>Customizing Restriction Messages<\/h3>\n<p>You can customize the restriction messages using filters in your theme's <code>functions.php<\/code> file or a custom plugin.<\/p>\n<ul>\n<li>\n<p><strong>Content Message<\/strong>:<\/p>\n<pre><code>add_filter( 'crwp_restricted_content_message', function( $message ) {\n    return '&lt;p&gt;You must be a premium member to view this content.&lt;\/p&gt;';\n} );<\/code><\/pre>\n<\/li>\n<li>\n<p><strong>REST API Message<\/strong>:<\/p>\n<pre><code>add_filter( 'crwp_restricted_rest_message', function( $message ) {\n    return '&lt;p&gt;Restricted content. Please upgrade your membership.&lt;\/p&gt;';\n} );<\/code><\/pre>\n<\/li>\n<li>\n<p><strong>RSS Feed Message<\/strong>:<\/p>\n<pre><code>add_filter( 'crwp_restricted_feed_message', function( $message ) {\n    return '&lt;p&gt;Content is restricted in the feed. Visit the site to view.&lt;\/p&gt;';\n} );<\/code><\/pre>\n<\/li>\n<\/ul>\n<h3>Available Filters<\/h3>\n<p>The plugin provides several filters that allow developers to customize its behavior. Below are details for each filter, including usage examples.<\/p>\n<h4><code>crwp_restricted_content_message<\/code><\/h4>\n<p><strong>Description<\/strong>:<br \/>\nFilters the message displayed to unauthorized users when they attempt to access restricted content on the front end.<\/p>\n<p><strong>Parameters<\/strong>:<\/p>\n<ul>\n<li><code>$message<\/code> <em>(string)<\/em>: The default restriction message.<\/li>\n<\/ul>\n<p><strong>Usage<\/strong>:<\/p>\n<p>Add the following code to your theme's <code>functions.php<\/code> file or a custom plugin to modify the restricted content message:<\/p>\n<pre><code>\/**\n * Customize the restricted content message displayed to unauthorized users.\n *\n * @param  string $message The default restriction message.\n * @return string The customized restriction message.\n *\/\nfunction my_custom_restricted_content_message( $message ) {\n    return '&lt;p&gt;You must be a premium member to view this content.&lt;\/p&gt;';\n}\nadd_filter( 'crwp_restricted_content_message', 'my_custom_restricted_content_message' );<\/code><\/pre>\n<p><strong>Returns<\/strong>:<\/p>\n<ul>\n<li><em>(string)<\/em>: The customized message to display to unauthorized users.<\/li>\n<\/ul>\n<h4><code>crwp_restricted_rest_message<\/code><\/h4>\n<p><strong>Description<\/strong>:<br \/>\nFilters the message returned in REST API responses for restricted content. This ensures that any applications or services consuming your REST API will receive a consistent message for restricted content.<\/p>\n<p><strong>Parameters<\/strong>:<\/p>\n<ul>\n<li><code>$message<\/code> <em>(string)<\/em>: The default REST API restriction message.<\/li>\n<\/ul>\n<p><strong>Usage<\/strong>:<\/p>\n<p>To modify the message returned in REST API responses for restricted content, add the following code:<\/p>\n<pre><code>\/**\n * Customize the REST API restricted content message.\n *\n * @param  string $message The default REST API restriction message.\n * @return string The customized restriction message.\n *\/\nfunction my_custom_restricted_rest_message( $message ) {\n    return '&lt;p&gt;Content is restricted via the REST API. Please log in.&lt;\/p&gt;';\n}\nadd_filter( 'crwp_restricted_rest_message', 'my_custom_restricted_rest_message' );<\/code><\/pre>\n<p><strong>Returns<\/strong>:<\/p>\n<ul>\n<li><em>(string)<\/em>: The customized message to return in REST API responses for restricted content.<\/li>\n<\/ul>\n<h4><code>crwp_restricted_feed_message<\/code><\/h4>\n<p><strong>Description<\/strong>:<br \/>\nFilters the message displayed in RSS feeds for restricted content. This is useful if you want to prevent unauthorized users from accessing restricted content through RSS readers.<\/p>\n<p><strong>Parameters<\/strong>:<\/p>\n<ul>\n<li><code>$message<\/code> <em>(string)<\/em>: The default feed restriction message.<\/li>\n<\/ul>\n<p><strong>Usage<\/strong>:<\/p>\n<p>Customize the RSS feed message by adding the following code:<\/p>\n<pre><code>\/**\n * Customize the RSS feed restricted content message.\n *\n * @param  string $message The default feed restriction message.\n * @return string The customized restriction message.\n *\/\nfunction my_custom_restricted_feed_message( $message ) {\n    return '&lt;p&gt;This content is restricted in the feed. Visit the website to access it.&lt;\/p&gt;';\n}\nadd_filter( 'crwp_restricted_feed_message', 'my_custom_restricted_feed_message' );<\/code><\/pre>\n<p><strong>Returns<\/strong>:<\/p>\n<ul>\n<li><em>(string)<\/em>: The customized message to display in RSS feeds for restricted content.<\/li>\n<\/ul>\n<h3>Notes<\/h3>\n<ul>\n<li>These filters should be added to your theme's <code>functions.php<\/code> file or within a custom plugin.<\/li>\n<li>Remember to replace the messages in the examples with your desired custom messages.<\/li>\n<li>Double check that any HTML used in the messages is properly sanitized and valid.<\/li>\n<\/ul>\n<h2>Frequently Asked Questions<\/h2>\n<h3>Does this plugin support custom post types and taxonomies?<\/h3>\n<p>Yes, it supports all public custom post types and taxonomies registered in WordPress\u00ae.<\/p>\n<h3>Can I restrict content to multiple user roles?<\/h3>\n<p>You can set the minimum required role for content access. Users with that role or higher will have access.<\/p>\n<h3>What happens to restricted content in the REST API and RSS feeds?<\/h3>\n<p>Restricted content will display a restriction message instead of the actual content.<\/p>\n<h2>Screenshots<\/h2>\n<ol>\n<li>\n<p><strong>Content Restriction Settings Page<\/strong><\/p>\n<\/li>\n<li>\n<p><strong>Restrict Content Metabox<\/strong><\/p>\n<\/li>\n<\/ol>\n<h2>Contributing<\/h2>\n<p>Contributions are welcome! Please open issues and submit pull requests on the <a href=\"https:\/\/github.com\/robertdevore\/content-restriction-for-wordpress\/\">GitHub repository<\/a>.<\/p>\n<h2>License<\/h2>\n<p>This plugin is licensed under the <a href=\"http:\/\/www.gnu.org\/licenses\/gpl-2.0.txt\">GPL-2.0+ License<\/a>.<\/p>","stable_version":"1.0.0","repo_version":"1.0.0","banner_image_url":"","requires_php":"","requires_at_least":"","tested_up_to":"","signing_authority":"","open_issues_count":0,"stars_count":15,"total_downloads":0,"updated_at":1734978633,"created_at":1734978633},{"id":5,"site_id":2,"type":"plugin","name":"Back In Stock Notifications for WooCommerce\u00ae","slug":"robertdevore\/back-in-stock-notifications","author_name":"Robert DeVore","author_url":"https:\/\/github.com\/robertdevore","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/9917957?v=4","description":"Automatically notify customers when their favorite products are restocked, and track what products are most in demand.","readme":"<h1>Back In Stock Notifications for WooCommerce\u00ae<\/h1>\n<p>Automatically notify customers when products they're interested in are back in stock, and track demand for your most popular items. The plugin integrates seamlessly with WooCommerce\u00ae to capture customer interest and manage notifications efficiently.<\/p>\n<hr \/>\n<h2>Features<\/h2>\n<ul>\n<li><strong>Automated Notifications<\/strong>: Sends customizable emails to customers when a product they signed up for is back in stock.<\/li>\n<li><strong>Demand Tracking<\/strong>: Track and display demand trends through waitlist statistics and analytics.<\/li>\n<li><strong>WooCommerce\u00ae Integration<\/strong>: Built for WooCommerce\u00ae to manage back-in-stock notifications.<\/li>\n<li><strong>Customizable Emails<\/strong>: Email templates for customer notifications can be customized to match your brand.<\/li>\n<li><strong>Dashboard Insights<\/strong>: Gain insights into product demand, customer interest, and track notification history within your WooCommerce\u00ae admin.<\/li>\n<li><strong>Automatic Updates<\/strong>: Receive updates through the WordPress\u00ae dashboard using <a href=\"https:\/\/github.com\/YahnisElsts\/plugin-update-checker\">PluginUpdateChecker<\/a>.<\/li>\n<li>\n<ul>\n<li>*<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h2>Installation<\/h2>\n<h3>Option 1: Install via WordPress\u00ae Dashboard (Recommended)<\/h3>\n<ol>\n<li>Download the latest <code>.zip<\/code> file from the <a href=\"https:\/\/github.com\/robertdevore\/back-in-stock-notifications\/releases\">Releases section on GitHub<\/a>.<\/li>\n<li>In your WordPress\u00ae Dashboard, navigate to <strong>Plugins &gt; Add New<\/strong>.<\/li>\n<li>Click the <strong>Upload Plugin<\/strong> button at the top of the page.<\/li>\n<li>Select the <code>.zip<\/code> file you downloaded and click <strong>Install Now<\/strong>.<\/li>\n<li>Once installation is complete, click <strong>Activate Plugin<\/strong>.<\/li>\n<\/ol>\n<hr \/>\n<h3>Option 2: Install via SFTP<\/h3>\n<ol>\n<li>Download the latest <code>.zip<\/code> file from the <a href=\"https:\/\/github.com\/robertdevore\/back-in-stock-notifications\/releases\">Releases section on GitHub<\/a>.<\/li>\n<li>Unzip the file to create a folder named <code>back-in-stock-notifications<\/code>.<\/li>\n<li>Use an SFTP client (e.g., FileZilla, Cyberduck) to connect to your WordPress\u00ae server.<\/li>\n<li>Upload the <code>back-in-stock-notifications<\/code> folder to the <code>\/wp-content\/plugins\/<\/code> directory.<\/li>\n<li>Go to your WordPress\u00ae Dashboard, navigate to <strong>Plugins<\/strong>, and click <strong>Activate<\/strong> under _Back In Stock Notifications for WooCommerce\u00ae.<\/li>\n<\/ol>\n<h3>Requirements<\/h3>\n<ul>\n<li>WooCommerce\u00ae (must be active for the plugin to work)<\/li>\n<li>WordPress\u00ae 5.0+<\/li>\n<li>PHP 7.2+ (compatible with PHP 8.0+)<\/li>\n<li>\n<ul>\n<li>*<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h2>Configuration and Setup<\/h2>\n<h3>Step 1: Enable WooCommerce\u00ae Compatibility<\/h3>\n<p>Ensure WooCommerce\u00ae is installed and activated before using this plugin. The plugin will automatically deactivate if WooCommerce\u00ae is not active.<\/p>\n<h3>Step 2: Configure the Plugin<\/h3>\n<p>Upon activation, the plugin creates the following custom database tables:<\/p>\n<ul>\n<li><strong>Waitlist<\/strong>: Tracks product waitlists by customer email.<\/li>\n<li><strong>Waitlist History<\/strong>: Records historical waitlist data.<\/li>\n<li><strong>Notifications<\/strong>: Stores sent notifications for back-in-stock alerts.<\/li>\n<\/ul>\n<p>These tables are created and maintained automatically.<\/p>\n<h3>Step 3: Email Customization<\/h3>\n<p>The plugin includes customizable email templates located in:<\/p>\n<ul>\n<li><code>templates\/emails\/back-in-stock-notification.php<\/code>: HTML version of the back-in-stock email.<\/li>\n<li><code>templates\/emails\/plain\/back-in-stock-notification.php<\/code>: Plain text version of the email.<\/li>\n<\/ul>\n<p>You can further customize these templates by copying them to your theme folder under <code>woocommerce\/emails\/<\/code> and editing them to match your brand style.<\/p>\n<hr \/>\n<h2>Usage<\/h2>\n<h3>1. Adding Customers to the Waitlist<\/h3>\n<ul>\n<li>Customers can join a waitlist on a product's single page.<\/li>\n<li>The waitlist form captures the customer's email, saving it to the waitlist database table.<\/li>\n<li>The plugin enqueues JavaScript only on out-of-stock single product pages, optimizing performance.<\/li>\n<\/ul>\n<h3>2. Notifying Customers<\/h3>\n<p>When stock levels are updated (via WooCommerce\u00ae's product update), the plugin will:<\/p>\n<ul>\n<li>Check if the product's stock is now above zero.<\/li>\n<li>Send a back-in-stock email notification to all users on that product's waitlist.<\/li>\n<li>Log notifications and remove customers from the waitlist after notifying them.<\/li>\n<\/ul>\n<h3>3. Managing Waitlists and Analytics<\/h3>\n<p>Admins can access the <strong>Back In Stock<\/strong> submenu under <strong>WooCommerce\u00ae<\/strong>. The dashboard provides insights, including:<\/p>\n<ul>\n<li><strong>Most Wanted Products<\/strong>: Products with the highest waitlist counts.<\/li>\n<li><strong>Most Overdue Products<\/strong>: Products that have been out of stock the longest.<\/li>\n<li><strong>Most Signed-Up Products<\/strong>: Top products based on waitlist sign-ups over time.<\/li>\n<li><strong>Sign-Ups and Notifications<\/strong>: Daily and monthly sign-up and notification statistics are tracked, with values stored for easy access via a helper class.<\/li>\n<\/ul>\n<h3>4. CSV Exporting<\/h3>\n<p>Two CSV export options are available on the <strong>Back In Stock<\/strong> dashboard:<\/p>\n<ul>\n<li><strong>Export Emails<\/strong>: Exports all unique emails from the waitlist history table.<\/li>\n<li><strong>Export Data<\/strong>: Exports demand insights such as the most wanted, most overdue, and most signed-up products.<\/li>\n<\/ul>\n<h3>Helper Functionality<\/h3>\n<p>The plugin introduces a <code>BISN_Data_Helper<\/code> class to simplify database queries for various waitlist and notification statistics, such as:<\/p>\n<ul>\n<li><code>get_most_wanted_products()<\/code>: Retrieves the top 10 most wanted products based on waitlist count.<\/li>\n<li><code>get_most_overdue_products()<\/code>: Retrieves the top 10 products out of stock the longest.<\/li>\n<li><code>get_signups_today()<\/code>: Counts the sign-ups from today.<\/li>\n<li><code>get_sent_today()<\/code>: Counts notifications sent today.<\/li>\n<\/ul>\n<p>The helper class enables efficient data retrieval for a streamlined and modular plugin structure.<\/p>\n<h3>Customizable Back In Stock Email<\/h3>\n<p>The <strong>BISN_Back_In_Stock_Email<\/strong> class controls the back-in-stock email notifications, which are sent when products are restocked. Emails are triggered by the <code>bisn_send_back_in_stock_email<\/code> action, providing seamless integration into WooCommerce's email management system.<\/p>","stable_version":"1.0.1","repo_version":"1.0.1","banner_image_url":"","requires_php":"","requires_at_least":"","tested_up_to":"","signing_authority":"","open_issues_count":0,"stars_count":13,"total_downloads":0,"updated_at":1734978633,"created_at":1734978633},{"id":4,"site_id":2,"type":"plugin","name":"Autocrattic","slug":"robertdevore\/autocrattic","author_name":"Robert DeVore","author_url":"https:\/\/github.com\/robertdevore","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/9917957?v=4","description":"A plugin that replaces specific hosting provider names with \"WordPress\u00ae\" in the post content.","readme":"<h1>Autocrattic plugin for WordPress<\/h1>\n<p><img src=\"https:\/\/img.shields.io\/badge\/Version-1.3-green.svg\" alt=\"Autocrattic Version\" \/>\n<img src=\"https:\/\/img.shields.io\/badge\/License-MIT-blue.svg\" alt=\"MIT License\" \/><\/p>\n<p>Autocrattic is a WordPress plugin that automatically replaces specific hosting provider names with &quot;WordPress\u00ae&quot; across various areas of your site, including post content, titles, and widgets. It offers a settings page where you can easily manage the list of hostnames to replace.<\/p>\n<p><em>This plugin is in no way affiliated with Automattic, WordPress, the WordPress Fondation, Matt Mullenweg or WooCommerce, Inc.<\/em><\/p>\n<h2>Features<\/h2>\n<ul>\n<li>Replaces custom hosting provider names with &quot;WordPress\u00ae&quot; in:\n<ul>\n<li>Post content (<code>the_content<\/code>)<\/li>\n<li>Post titles (<code>the_title<\/code>)<\/li>\n<li>Widget text content (<code>widget_text_content<\/code>)<\/li>\n<\/ul><\/li>\n<li>Comes with a settings page for easy configuration of hostnames to replace.<\/li>\n<li>Preloaded with the top 50 hosting provider names for immediate use.<\/li>\n<li>Secure, localized, and properly escaped for safety and flexibility.<\/li>\n<\/ul>\n<h2>Installation<\/h2>\n<ol>\n<li>Download the plugin from <a href=\"https:\/\/github.com\/robertdevore\/autocrattic\">GitHub<\/a>.<\/li>\n<li>Unzip the plugin folder.<\/li>\n<li>Upload the unzipped folder to <code>\/wp-content\/plugins\/<\/code> using an FTP client.<\/li>\n<li>Activate the plugin through the <strong>Plugins<\/strong> menu in WordPress.<\/li>\n<\/ol>\n<h2>Usage<\/h2>\n<ol>\n<li>Go to <strong>Settings<\/strong> -&gt; <strong>Autocrattic<\/strong> to customize the list of hosting providers you want to replace.<\/li>\n<li>By default, the plugin replaces popular hosting company names with &quot;WordPress\u00ae&quot; across post content, titles, and widget text.<\/li>\n<li>Modify the list of hostnames by adding or removing entries in the settings page (separate names by commas).<\/li>\n<\/ol>\n<h3>Example<\/h3>\n<p>If you add &quot;GoDaddy, Bluehost&quot; to the settings, the plugin will replace any occurrence of these names with &quot;WordPress\u00ae&quot; across your site's content.<\/p>\n<h2>Security<\/h2>\n<p>Autocrattic is built with security in mind:<\/p>\n<ul>\n<li><strong>Sanitization<\/strong>: All input is sanitized using <code>sanitize_textarea_field<\/code> before saving.<\/li>\n<li><strong>Escaping<\/strong>: Output is properly escaped using <code>esc_html()<\/code> and <code>esc_textarea()<\/code> to prevent XSS attacks.<\/li>\n<li><strong>Nonces<\/strong>: WordPress\u2019s built-in nonces are used to secure form submissions.<\/li>\n<\/ul>\n<h2>Localization<\/h2>\n<p>Autocrattic is fully translation-ready and uses localization functions throughout. To contribute a translation, please follow the instructions in the <strong>Contributing<\/strong> section below.<\/p>\n<h2>Changelog<\/h2>\n<h3>v1.0<\/h3>\n<ul>\n<li>Initial release<\/li>\n<\/ul>\n<h2>Contributing<\/h2>\n<p>Contributions are welcome to improve the Autocrattic plugin! Here's how you can get involved:<\/p>\n<ol>\n<li>Fork this repository.<\/li>\n<li>Create a new branch: <code>git checkout -b feature\/your-feature-name<\/code>.<\/li>\n<li>Make your changes and commit them: <code>git commit -m 'Add new feature'<\/code>.<\/li>\n<li>Push to the branch: <code>git push origin feature\/your-feature-name<\/code>.<\/li>\n<li>Submit a pull request to the <code>main<\/code> branch.<\/li>\n<\/ol>\n<p>Please ensure your changes follow WordPress coding standards and that any public-facing text is localized using <code>__()<\/code> or <code>_e()<\/code>.<\/p>\n<h3>Reporting Issues<\/h3>\n<p>Found a bug? Have a feature request? Please <a href=\"https:\/\/github.com\/robertdevore\/autocrattic\/issues\">open an issue<\/a> on GitHub, and I'll look into it as soon as possible.<\/p>\n<h2>License<\/h2>\n<p>This project is licensed under the <strong>MIT License<\/strong> - see the <a href=\"LICENSE\">LICENSE<\/a> file for more details.<\/p>\n<h2>Author<\/h2>\n<p>Created by <strong>Robert DeVore<\/strong>. If you have any questions, feel free to contact me through the <a href=\"https:\/\/github.com\/your-repo\/autocrattic\/issues\">GitHub Issues<\/a>.<\/p>\n<h2>Disclaimer<\/h2>\n<p>It's been stated above but should be said again so there is no confusion:<\/p>\n<p><strong>This plugin is in no way affiliated with Automattic, WordPress, the WordPress Fondation, Matt Mullenweg or WooCommerce, Inc.<\/strong><\/p>","stable_version":"1.0.0","repo_version":"1.0.0","banner_image_url":"","requires_php":"","requires_at_least":"","tested_up_to":"","signing_authority":"","open_issues_count":0,"stars_count":7,"total_downloads":0,"updated_at":1734978633,"created_at":1734978633},{"id":3,"site_id":2,"type":"plugin","name":"Associated Taxonomies","slug":"robertdevore\/associated-taxonomies","author_name":"Robert DeVore","author_url":"https:\/\/github.com\/robertdevore","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/9917957?v=4","description":"Adds a field to associate terms within the same taxonomy.","readme":"<h1>Associated Taxonomies<\/h1>\n<p>Associated Taxonomies is a free WordPress\u00ae plugin designed to enhance your taxonomy management by allowing you to associate terms within the same taxonomy. <\/p>\n<p>It simplifies term relationships, offering an intuitive way to manage and display associated terms for categories, tags, and custom taxonomies.<\/p>\n<h2>Features<\/h2>\n<ul>\n<li><strong>Associate Terms:<\/strong> Add, edit, and save associated terms for any public taxonomy.<\/li>\n<li><strong>Dynamic Hooks:<\/strong> Automatically integrates with all public taxonomies.<\/li>\n<li><strong>Shortcode Support:<\/strong> Display associated terms or posts based on term relationships using simple shortcodes.<\/li>\n<li><strong>Custom Admin UI:<\/strong> Enriches taxonomy term admin pages with a Select2-powered multi-select dropdown.<\/li>\n<li><strong>Frontend Styling:<\/strong> Ensures associated terms are displayed elegantly on the frontend.<\/li>\n<\/ul>\n<h2>Installation<\/h2>\n<ol>\n<li>Download the plugin from the <a href=\"https:\/\/github.com\/robertdevore\/associated-taxonomies\/\">GitHub repository<\/a>.<\/li>\n<li>Upload the plugin folder to the <code>\/wp-content\/plugins\/<\/code> directory.<\/li>\n<li>Activate the plugin through the <strong>Plugins<\/strong> menu in WordPress.<\/li>\n<li>Enjoy enhanced taxonomy management!<\/li>\n<\/ol>\n<h2>Usage<\/h2>\n<h3>Associating Terms in the Admin Panel<\/h3>\n<ol>\n<li>Navigate to any taxonomy (e.g., Categories or Tags) in the WordPress admin.<\/li>\n<li>On the <strong>Add New Term<\/strong> page, use the &quot;Associated Terms&quot; dropdown to select terms to associate.<\/li>\n<li>On the <strong>Edit Term<\/strong> page, manage associations with the Select2-powered dropdown.<\/li>\n<li>Save the term to update its associated terms.<\/li>\n<\/ol>\n<h3>Displaying Associated Terms<\/h3>\n<p>Use the <code>[related_terms]<\/code> shortcode to display associated terms for a specific taxonomy term.<\/p>\n<h4>Example:<\/h4>\n<pre><code>[related_terms id=\"123\" taxonomy=\"category\"]<\/code><\/pre>\n<ul>\n<li><code>id<\/code>: The term ID.<\/li>\n<li><code>taxonomy<\/code>: The taxonomy name (e.g., <code>category<\/code>, <code>post_tag<\/code>, etc.).<\/li>\n<\/ul>\n<h3>Displaying Posts by Related Terms<\/h3>\n<p>Use the <code>[posts_by_related_terms]<\/code> shortcode to display posts that belong to a parent term and at least one associated child term.<\/p>\n<h4>Example:<\/h4>\n<pre><code>[posts_by_related_terms parent=\"12\" child=\"34,56\" taxonomy=\"category\"]<\/code><\/pre>\n<ul>\n<li><code>parent<\/code>: The parent term ID.<\/li>\n<li><code>child<\/code>: Comma-separated IDs of child terms.<\/li>\n<li><code>taxonomy<\/code>: The taxonomy name.<\/li>\n<\/ul>\n<h2>Hooks and Filters<\/h2>\n<h3>Filters<\/h3>\n<ul>\n<li><code>associated_taxonomies_tax_list<\/code>: Modify the list of taxonomies where associations are enabled.<\/li>\n<\/ul>\n<h4>Example:<\/h4>\n<pre><code>add_filter( 'associated_taxonomies_tax_list', function( $taxonomies ) {\n    return array_merge( $taxonomies, [ 'custom_taxonomy' ] );\n});<\/code><\/pre>\n<h3>Actions<\/h3>\n<ul>\n<li>Hooks for dynamically adding fields to all public taxonomies:\n<ul>\n<li><code>{$taxonomy}_add_form_fields<\/code><\/li>\n<li><code>{$taxonomy}_edit_form_fields<\/code><\/li>\n<li><code>created_{$taxonomy}<\/code><\/li>\n<li><code>edited_{$taxonomy}<\/code><\/li>\n<\/ul><\/li>\n<\/ul>\n<h2>Enqueued Assets<\/h2>\n<ul>\n<li><strong>Admin Scripts:<\/strong> Select2.js for taxonomy term admin pages.<\/li>\n<li><strong>Frontend Styles:<\/strong> Basic CSS for associated terms presentation.<\/li>\n<\/ul>\n<h2>Development Notes<\/h2>\n<h3>Plugin Update Checker<\/h3>\n<p>This plugin uses the <a href=\"https:\/\/github.com\/YahnisElsts\/plugin-update-checker\">YahnisElsts\/PluginUpdateChecker<\/a> library to check for updates hosted on GitHub. Updates are pulled from the <code>main<\/code> branch of the repository.<\/p>\n<h2>Requirements<\/h2>\n<ul>\n<li>WordPress 5.0 or higher<\/li>\n<li>PHP 7.4 or higher<\/li>\n<\/ul>\n<h2>Contributing<\/h2>\n<p>Your contributions are welcomed and appreciated! Feel free to:<\/p>\n<ul>\n<li>Submit issues or feature requests on the <a href=\"https:\/\/github.com\/robertdevore\/associated-taxonomies\/\">GitHub repository<\/a>.<\/li>\n<li>Fork the repository, make your changes, and submit a pull request.<\/li>\n<\/ul>\n<h2>License<\/h2>\n<p>This plugin is licensed under the <a href=\"http:\/\/www.gnu.org\/licenses\/gpl-2.0.txt\">GNU General Public License v2.0<\/a>.<\/p>","stable_version":"1.0.0","repo_version":"1.0.0","banner_image_url":"","requires_php":"","requires_at_least":"","tested_up_to":"","signing_authority":"","open_issues_count":0,"stars_count":2,"total_downloads":0,"updated_at":1734978633,"created_at":1734978633},{"id":10,"site_id":2,"type":"plugin","name":"Brands for WooCommerce\u00ae","slug":"robertdevore\/brands-for-woocommerce","author_name":"Robert DeVore","author_url":"https:\/\/github.com\/robertdevore","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/9917957?v=4","description":"Allows you to create and manage brands in WooCommerce\u00ae, with options to display brands as lists, thumbnails, or sidebar widgets.","readme":"<h1>Brands for WooCommerce\u00ae<\/h1>\n<p>Allows you to create and manage brands in WooCommerce, with options to display brands as lists, thumbnails, or sidebar widgets.<\/p>\n<h2>Table of Contents<\/h2>\n<ol>\n<li><a href=\"#features\">Features<\/a><\/li>\n<li><a href=\"#installation\">Installation<\/a><\/li>\n<li><a href=\"#activation\">Activation<\/a><\/li>\n<li><a href=\"#usage\">Usage<\/a>\n<ul>\n<li><a href=\"#managing-brands\">Managing Brands<\/a><\/li>\n<li><a href=\"#shortcodes\">Shortcodes<\/a>\n<ul>\n<li><a href=\"#1-display-brands-in-a-grid\">1. Display Brands in a Grid<\/a><\/li>\n<li><a href=\"#2-display-products-by-brand\">2. Display Products by Brand<\/a><\/li>\n<li><a href=\"#3-display-an-a-z-indexed-list-of-brands\">3. Display an A-Z Indexed List of Brands<\/a><\/li>\n<\/ul><\/li>\n<\/ul><\/li>\n<li><a href=\"#widgets\">Widgets<\/a>\n<ul>\n<li><a href=\"#brand-thumbnails-widget\">Brand Thumbnails Widget<\/a><\/li>\n<\/ul><\/li>\n<li><a href=\"#rest-api\">REST API<\/a><\/li>\n<li><a href=\"#customization\">Customization<\/a><\/li>\n<li><a href=\"#frequently-asked-questions\">Frequently Asked Questions<\/a><\/li>\n<li><a href=\"#support\">Support<\/a><\/li>\n<li><a href=\"#changelog\">Changelog<\/a><\/li>\n<li><a href=\"#license\">License<\/a><\/li>\n<\/ol>\n<h2>Features<\/h2>\n<ul>\n<li><strong>Manage Brands:<\/strong> Create, edit, and delete brands associated with WooCommerce products.<\/li>\n<li><strong>Brand Images &amp; URLs:<\/strong> Assign images and website URLs to each brand.<\/li>\n<li><strong>Display Options:<\/strong> Display brands in a grid layout, as a list with A-Z indexing, or using widgets.<\/li>\n<li><strong>Shortcodes:<\/strong> Utilize shortcodes to embed brand lists and product grids within pages and posts.<\/li>\n<li><strong>REST API Integration:<\/strong> Access brand data via REST API endpoints.<\/li>\n<li><strong>Widget Support:<\/strong> Easily add brand thumbnails to your site's sidebar or other widget-ready areas.<\/li>\n<li><strong>Automatic Updates:<\/strong> Stay updated with the latest features and improvements via GitHub integration.<\/li>\n<\/ul>\n<h2>Installation<\/h2>\n<h3>1. Download the Plugin<\/h3>\n<ul>\n<li><strong>Option 1:<\/strong> Download the plugin as a ZIP file from the <a href=\"https:\/\/github.com\/robertdevore\/brands-for-woocommerce\/\">GitHub repository<\/a>.<\/li>\n<li><strong>Option 2:<\/strong> Clone the repository using Git:\n<pre><code>git clone https:\/\/github.com\/robertdevore\/brands-for-woocommerce.git<\/code><\/pre><\/li>\n<\/ul>\n<h3>2. Upload the Plugin<\/h3>\n<ul>\n<li>\n<p><strong>Via WordPress Dashboard:<\/strong><\/p>\n<ol>\n<li>Log in to your WordPress admin dashboard.<\/li>\n<li>Navigate to <strong>Plugins &gt; Add New<\/strong>.<\/li>\n<li>Click on <strong>Upload Plugin<\/strong>.<\/li>\n<li>Choose the downloaded <code>brands-for-woocommerce.zip<\/code> file.<\/li>\n<li>Click <strong>Install Now<\/strong>.<\/li>\n<li>After installation, click <strong>Activate Plugin<\/strong>.<\/li>\n<\/ol>\n<\/li>\n<li>\n<p><strong>Via FTP:<\/strong><\/p>\n<ol>\n<li>Extract the downloaded ZIP file.<\/li>\n<li>Upload the extracted folder (<code>brands-for-woocommerce<\/code>) to the <code>\/wp-content\/plugins\/<\/code> directory on your server.<\/li>\n<li>Log in to your WordPress admin dashboard.<\/li>\n<li>Navigate to <strong>Plugins &gt; Installed Plugins<\/strong>.<\/li>\n<li>Find <strong>Brands for WooCommerce\u00ae<\/strong> and click <strong>Activate<\/strong>.<\/li>\n<\/ol>\n<\/li>\n<\/ul>\n<h3>3. Verify Installation<\/h3>\n<p>After activation, ensure that the plugin is active by navigating to <strong>Plugins &gt; Installed Plugins<\/strong> and verifying that <strong>Brands for WooCommerce\u00ae<\/strong> is listed as active.<\/p>\n<h2>Activation<\/h2>\n<p>Upon activation, the plugin:<\/p>\n<ul>\n<li>Registers a new taxonomy <code>product_brand<\/code> associated with WooCommerce products.<\/li>\n<li>Adds custom fields for brand images and website URLs.<\/li>\n<li>Registers shortcodes and widgets for displaying brands and products.<\/li>\n<li>Sets up REST API endpoints for accessing brand data.<\/li>\n<\/ul>\n<h2>Usage<\/h2>\n<h3>Managing Brands<\/h3>\n<ol>\n<li>\n<p><strong>Create a New Brand:<\/strong><\/p>\n<ul>\n<li>Navigate to <strong>Products &gt; Brands<\/strong> in your WordPress admin dashboard.<\/li>\n<li>Click <strong>Add New Brand<\/strong>.<\/li>\n<li>Enter the <strong>Brand Name<\/strong>.<\/li>\n<li>Upload a <strong>Brand Image<\/strong> by clicking the <strong>Upload Image<\/strong> button.<\/li>\n<li>Enter the <strong>Brand Website URL<\/strong>.<\/li>\n<li>Click <strong>Add New Brand<\/strong> to save.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Edit an Existing Brand:<\/strong><\/p>\n<ul>\n<li>Navigate to <strong>Products &gt; Brands<\/strong>.<\/li>\n<li>Hover over the brand you wish to edit and click <strong>Edit<\/strong>.<\/li>\n<li>Update the <strong>Brand Name<\/strong>, <strong>Brand Image<\/strong>, or <strong>Brand Website URL<\/strong> as needed.<\/li>\n<li>Click <strong>Update<\/strong> to save changes.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Delete a Brand:<\/strong><\/p>\n<ul>\n<li>Navigate to <strong>Products &gt; Brands<\/strong>.<\/li>\n<li>Hover over the brand you wish to delete and click <strong>Delete<\/strong>.<\/li>\n<li>Confirm the deletion when prompted.<\/li>\n<\/ul>\n<\/li>\n<\/ol>\n<h3>Shortcodes<\/h3>\n<p>The plugin provides three shortcodes to display brands and products associated with brands. Below are detailed instructions on how to use each shortcode.<\/p>\n<h4>1. Display Brands in a Grid<\/h4>\n<p><strong>Shortcode:<\/strong> <code>[product_brand]<\/code><\/p>\n<p><strong>Description:<\/strong> Displays all brands in a customizable grid layout.<\/p>\n<p><strong>Attributes:<\/strong><\/p>\n<ul>\n<li><code>columns<\/code> (int): Number of columns in the grid. Default is <code>4<\/code>.<\/li>\n<li><code>show_title<\/code> (bool): Show or hide the brand title. Default is <code>true<\/code>.<\/li>\n<li><code>link_image<\/code> (bool): Enable or disable linking the brand image to the brand archive page. Default is <code>true<\/code>.<\/li>\n<li><code>show_description<\/code> (bool): Show or hide the brand description. Default is <code>false<\/code>.<\/li>\n<\/ul>\n<p><strong>Usage Examples:<\/strong><\/p>\n<ul>\n<li>\n<p><strong>Default Grid (4 columns, titles shown, images linked, descriptions hidden):<\/strong><\/p>\n<pre><code>[product_brand]<\/code><\/pre>\n<\/li>\n<li>\n<p><strong>Two-Column Grid with Descriptions:<\/strong><\/p>\n<pre><code>[product_brand columns=\"2\" show_description=\"true\"]<\/code><\/pre>\n<\/li>\n<li>\n<p><strong>Four-Column Grid without Image Links:<\/strong><\/p>\n<pre><code>[product_brand link_image=\"false\"]<\/code><\/pre>\n<\/li>\n<\/ul>\n<p><strong>Example Output:<\/strong><\/p>\n<p>A responsive grid displaying brand images and names. Clicking on an image navigates to the respective brand archive page.<\/p>\n<h4>2. Display Products by Brand<\/h4>\n<p><strong>Shortcode:<\/strong> <code>[brand_products]<\/code><\/p>\n<p><strong>Description:<\/strong> Displays WooCommerce products associated with a specific brand in a grid layout.<\/p>\n<p><strong>Attributes:<\/strong><\/p>\n<ul>\n<li><code>brand<\/code> (string): The slug of the brand to display products from. <strong>(Required)<\/strong><\/li>\n<li><code>per_page<\/code> (int): Number of products to display. Default is <code>12<\/code>.<\/li>\n<li><code>columns<\/code> (int): Number of columns in the grid. Default is <code>4<\/code>.<\/li>\n<li><code>orderby<\/code> (string): Field to order products by. Default is <code>title<\/code>. Options include <code>date<\/code>, <code>price<\/code>, etc.<\/li>\n<li><code>order<\/code> (string): Order direction. <code>asc<\/code> for ascending, <code>desc<\/code> for descending. Default is <code>asc<\/code>.<\/li>\n<\/ul>\n<p><strong>Usage Examples:<\/strong><\/p>\n<ul>\n<li>\n<p><strong>Display 8 Products from &quot;brand-a&quot; in a 3-column grid:<\/strong><\/p>\n<pre><code>[brand_products brand=\"brand-a\" per_page=\"8\" columns=\"3\"]<\/code><\/pre>\n<\/li>\n<li>\n<p><strong>Display 16 Products from &quot;brand-b&quot; ordered by date in descending order:<\/strong><\/p>\n<pre><code>[brand_products brand=\"brand-b\" per_page=\"16\" orderby=\"date\" order=\"desc\"]<\/code><\/pre>\n<\/li>\n<\/ul>\n<p><strong>Example Output:<\/strong><\/p>\n<p>A WooCommerce-styled grid showcasing products from the specified brand, adhering to the provided layout and ordering parameters.<\/p>\n<h4>3. Display an A-Z Indexed List of Brands<\/h4>\n<p><strong>Shortcode:<\/strong> <code>[brands_list]<\/code><\/p>\n<p><strong>Description:<\/strong> Displays an A-Z indexed list of brands with an optional option to show brand images.<\/p>\n<p><strong>Attributes:<\/strong><\/p>\n<ul>\n<li><code>show_images<\/code> (bool): Show or hide brand images next to brand names. Default is <code>false<\/code>.<\/li>\n<li><code>show_title<\/code> (bool): Show or hide brand names. Default is <code>true<\/code>.<\/li>\n<\/ul>\n<p><strong>Usage Examples:<\/strong><\/p>\n<ul>\n<li>\n<p><strong>Default List (brand images hidden):<\/strong><\/p>\n<pre><code>[brands_list]<\/code><\/pre>\n<\/li>\n<li>\n<p><strong>List with Brand Images:<\/strong><\/p>\n<pre><code>[brands_list show_images=\"true\"]<\/code><\/pre>\n<\/li>\n<li>\n<p><strong>List with Brand Images and Titles Hidden:<\/strong><\/p>\n<pre><code>[brands_list show_images=\"true\" show_title=\"false\"]<\/code><\/pre>\n<\/li>\n<\/ul>\n<p><strong>Example Output:<\/strong><\/p>\n<p>An A-Z navigation menu at the top. Clicking on a letter scrolls to the respective section of brands starting with that letter. Brands are listed with or without images based on the <code>show_images<\/code> attribute.<\/p>\n<h3>Enqueueing Styles<\/h3>\n<p>The plugin automatically enqueues its styles. However, if you wish to customize the styles further, you can override the CSS by adding your own styles in your theme or child theme.<\/p>\n<p><strong>Default Styles:<\/strong><\/p>\n<p>Located in <code>assets\/css\/brands-for-woocommerce.css<\/code>.<\/p>\n<p><strong>Example Custom CSS:<\/strong><\/p>\n<pre><code>.brand-index-menu {\n    margin-bottom: 20px;\n    text-align: center;\n}\n.brand-index-menu a {\n    margin: 0 5px;\n    font-size: 16px;\n    font-weight: bold;\n    color: #0073aa;\n    text-decoration: none;\n}\n.brand-index-menu a:hover {\n    color: #005177;\n}\n.brands-list {\n    margin-top: 20px;\n}\n.brands-list h2 {\n    font-size: 20px;\n    border-bottom: 1px solid #ddd;\n    padding-bottom: 5px;\n    margin-top: 30px;\n}\n.brands-list ul {\n    list-style: none;\n    padding-left: 0;\n}\n.brands-list ul li {\n    padding: 5px 0;\n}\n.brands-list ul li a {\n    color: #0073aa;\n    text-decoration: none;\n}\n.brands-list ul li a:hover {\n    color: #005177;\n}\n.brand-image {\n    max-width: 50px;\n    height: auto;\n    margin-right: 10px;\n}<\/code><\/pre>\n<h2>Widgets<\/h2>\n<h3>Brand Thumbnails Widget<\/h3>\n<p><strong>Description:<\/strong> Displays brand thumbnails with options to show\/hide brand names and descriptions, limit the number of displayed brands, and randomize the display order.<\/p>\n<p><strong>How to Add the Widget:<\/strong><\/p>\n<ol>\n<li>Navigate to <strong>Appearance &gt; Widgets<\/strong> in your WordPress admin dashboard.<\/li>\n<li>Locate the <strong>Brand Thumbnails Widget<\/strong>.<\/li>\n<li>Drag and drop the widget into your desired widget area (e.g., Sidebar, Footer).<\/li>\n<li>Configure the widget settings:\n<ul>\n<li><strong>Show Brand Name:<\/strong> Toggle the display of brand names.<\/li>\n<li><strong>Show Brand Description:<\/strong> Toggle the display of brand descriptions.<\/li>\n<li><strong>Number of Brands to Display:<\/strong> Set the limit for the number of brands shown.<\/li>\n<li><strong>Randomize Brands Display Order:<\/strong> Shuffle the order of displayed brands.<\/li>\n<\/ul><\/li>\n<li>Click <strong>Save<\/strong> to apply the settings.<\/li>\n<\/ol>\n<p><strong>Widget Settings Explained:<\/strong><\/p>\n<ul>\n<li><strong>Show Brand Name:<\/strong> When checked, the brand name will be displayed below the brand image.<\/li>\n<li><strong>Show Brand Description:<\/strong> When checked, the brand description will be displayed below the brand name.<\/li>\n<li><strong>Number of Brands to Display:<\/strong> Defines how many brands will be shown in the widget. Defaults to <code>5<\/code>.<\/li>\n<li><strong>Randomize Brands Display Order:<\/strong> When enabled, brands will be displayed in a random order each time the page loads.<\/li>\n<\/ul>\n<p><strong>Example Widget Output:<\/strong><\/p>\n<p>A grid of brand thumbnails with optional names and descriptions, adhering to the configured settings.<\/p>\n<h2>REST API<\/h2>\n<p>The plugin registers a REST API endpoint to fetch all brands.<\/p>\n<h3>Endpoint<\/h3>\n<pre><code>GET \/wp-json\/wc\/v3\/brands<\/code><\/pre>\n<h3>Response<\/h3>\n<p>Returns a JSON array of brands with the following fields:<\/p>\n<ul>\n<li><code>id<\/code>: Brand term ID.<\/li>\n<li><code>name<\/code>: Brand name.<\/li>\n<li><code>description<\/code>: Brand description.<\/li>\n<li><code>slug<\/code>: Brand slug.<\/li>\n<li><code>count<\/code>: Number of products associated with the brand.<\/li>\n<li><code>image<\/code>: URL to the brand image (if available).<\/li>\n<li><code>url<\/code>: URL to the brand archive page.<\/li>\n<\/ul>\n<h3>Example Request<\/h3>\n<pre><code>curl -X GET https:\/\/yourwebsite.com\/wp-json\/wc\/v3\/brands<\/code><\/pre>\n<h3>Example Response<\/h3>\n<pre><code>[\n    {\n        \"id\": 1,\n        \"name\": \"Brand A\",\n        \"description\": \"Description for Brand A.\",\n        \"slug\": \"brand-a\",\n        \"count\": 10,\n        \"image\": \"https:\/\/yourwebsite.com\/images\/brand-a.jpg\",\n        \"url\": \"https:\/\/yourwebsite.com\/brand\/brand-a\/\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Brand B\",\n        \"description\": \"Description for Brand B.\",\n        \"slug\": \"brand-b\",\n        \"count\": 8,\n        \"image\": \"https:\/\/yourwebsite.com\/images\/brand-b.jpg\",\n        \"url\": \"https:\/\/yourwebsite.com\/brand\/brand-b\/\"\n    }\n    \/\/ ...additional brands\n]<\/code><\/pre>\n<h2>Customization<\/h2>\n<h3>Overriding Templates<\/h3>\n<p>The plugin uses WooCommerce's template system to display products. If you wish to customize the display, you can override WooCommerce templates in your theme.<\/p>\n<ol>\n<li><strong>Copy Template File:<\/strong><\/li>\n<\/ol>\n<p>Locate the template file you want to override (e.g., <code>content-product.php<\/code>).<\/p>\n<ol start=\"2\">\n<li><strong>Paste into Theme:<\/strong><\/li>\n<\/ol>\n<p>Copy the file to your theme's WooCommerce directory: <code>your-theme\/woocommerce\/content-product.php<\/code>.<\/p>\n<ol start=\"3\">\n<li><strong>Modify as Needed:<\/strong><\/li>\n<\/ol>\n<p>Edit the copied template file to customize the product display.<\/p>\n<h3>Adding Custom Styles<\/h3>\n<p>To further customize the appearance of brand listings and widgets, add custom CSS to your theme or child theme.<\/p>\n<p><strong>Example:<\/strong><\/p>\n<pre><code>.product-brand-grid {\n    display: grid;\n    gap: 20px;\n    justify-items: center;\n}\n\n.product-brand-item {\n    text-align: center;\n}\n\n.brand-image {\n    max-width: 100px;\n    height: auto;\n}\n\n.brand-name {\n    font-size: 16px;\n    font-weight: bold;\n    margin-top: 10px;\n}\n\n.brand-description {\n    font-size: 14px;\n    color: #666;\n    margin-top: 5px;\n}<\/code><\/pre>\n<h2>Frequently Asked Questions<\/h2>\n<p><strong>Q1: How do I add a brand image?<\/strong><br \/>\n<strong>A:<\/strong> When adding or editing a brand, use the <strong>Upload Image<\/strong> button to select or upload an image from your media library. The image will be displayed alongside the brand name.<\/p>\n<p><strong>Q2: Can I disable brand descriptions globally?<\/strong><br \/>\n<strong>A:<\/strong> Yes. By default, brand descriptions are hidden in the grid layout. You can enable them using the <code>show_description<\/code> attribute in the <code>[product_brand]<\/code> shortcode or within the widget settings.<\/p>\n<p><strong>Q3: How do I update the plugin?<\/strong><br \/>\n<strong>A:<\/strong> The plugin uses a GitHub-based update checker. Ensure that the <code>Update URI<\/code> in the plugin header points to your repository. Updates will be handled automatically through the WordPress dashboard.<\/p>\n<p><strong>Q4: Can I change the taxonomy slug from <code>brand<\/code> to something else?<\/strong><br \/>\n<strong>A:<\/strong> Currently, the taxonomy slug is set to <code>brand<\/code>. To change it, modify the <code>rewrite<\/code> argument in the <code>register_brand_taxonomy<\/code> method and ensure that permalinks are refreshed by visiting <strong>Settings &gt; Permalinks<\/strong> and clicking <strong>Save Changes<\/strong>.<\/p>\n<p><strong>Q5: Is the plugin compatible with all WooCommerce themes?<\/strong><br \/>\n<strong>A:<\/strong> The plugin is designed to integrate seamlessly with most WooCommerce-compatible themes. However, some themes may require additional CSS adjustments for optimal display.<\/p>\n<h2>Support<\/h2>\n<p>For support, please visit the <a href=\"https:\/\/github.com\/robertdevore\/brands-for-woocommerce\/issues\">GitHub Issues<\/a> page of the repository. Feel free to report bugs, request features, or ask questions.<\/p>","stable_version":"1.0.0","repo_version":"1.0.0","banner_image_url":"","requires_php":"","requires_at_least":"","tested_up_to":"","signing_authority":"","open_issues_count":0,"stars_count":2,"total_downloads":0,"updated_at":1734978633,"created_at":1734978633},{"id":1,"site_id":1,"type":"plugin","name":"Juniper\/Author","slug":"duanestorey\/juniper-author","author_name":"Duane Storey","author_url":"https:\/\/github.com\/duanestorey","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/366185?v=4","description":"Facilitates code signing and releases for WordPress add-ons using the Juniper release system for WordPress","readme":"<h1>Juniper\/Author<\/h1>\n<p>A WordPress plugin to manage plugin and theme ownership on various platforms, starting with Github.<\/p>\n<h2>How It Works<\/h2>\n<p>Juniper\/Author is meant to be installed by plugin and theme authors who currently distribute or want to distribute their plugins and themes via Github. <\/p>\n<p>It synchonizes your Github repositories to your public WordPress installation, which can then be used to cryptographically sign your ZIPs for distribution (coming soon).  In addition, Juniper\/Author provides a WordPress API endpoint for Juniper\/Server, a distributed mirror system that does not rely on WordPress.org for finding and installing WordPress plugins and themes.<\/p>\n<h2>Installation<\/h2>\n<p>Juniper\/Author can be installed as normal by downloading the plugin from Github and installing it in the WordPress admin.  At some point in the near future, the Juniper\/Berry installer will be complete which will allow only cryptographically signed ZIP files to be installed.  Why is that important?  When a ZIP file is signed and verified, it means it was generated by the author and not tampered with at any point.  This prevents supply-chain attacks where a rogue organization could potentially take over a plugin or theme supply chain, effectively taking ownership of it.<\/p>\n<h2>Post-Install Steps<\/h2>\n<p>Once the plugin is installed, you'll need to perform the following steps:<\/p>\n<ol>\n<li>In the admin panel in the Authorship\/Options section, generate a private\/public key pair to be used for signing.  Your private key needs to be encrypted with a password, so make sure to choose a strong one here during the key generation phase.  This password is not stored anywhere on your install, so if you lose it you will no longer be able to sign your ZIP files, and will be forced to regenerate a new key (effectively making all other previously released ZIP files no longer valid).<\/li>\n<li>Juniper\/Author communicates extensively with Github via their public-facing API, which is heavily rate-limited.  To get around that, you need to create an access token to use in by your WordPress installation.\n<ul>\n<li>First, go to your Github page, and click your avatar in the corner.  Choose &quot;Settings&quot;, and navigate to the bottom to &quot;Developer Settings&quot;<\/li>\n<li>Select &quot;Personal Acccess Tokens&quot;, and then &quot;Tokens (Classic)&quot;<\/li>\n<li>Click the dropdown to &quot;Generate new token&quot; and select &quot;New Fine-grained personal access token&quot;<\/li>\n<li>Give your token a name just so you remember what it is, i.e. &quot;Juniper Access Token&quot;<\/li>\n<li>Set the expiration to &quot;No expiration&quot;<\/li>\n<li>Juniper\/Author currently doesn't write to Github, so you can use the &quot;Public Repositories (read-only)&quot; setting for access<\/li>\n<li>You don't need to add any other additional permissions, so click &quot;Generate&quot; when done<\/li>\n<li>When you see your token, copy it and paste it into the Juniper\/Author admin for the &quot;Github Token&quot; setting, and click Save<\/li>\n<\/ul><\/li>\n<li>Click the &quot;Repositories&quot; menu option under &quot;Juniper&quot; in the WordPress admin<\/li>\n<li>To import your repositories, click &quot;Refresh&quot; at the bottom.  This process may take a little while, so don't worry too much if it takes up to 30 seconds or so<\/li>\n<li>Once done, you should see a list of all your repositories where Juniper\/Author detected a valid WordPress plugin.<\/li>\n<li>To submit these plugins to the currently active Juniper\/Server install at <a href=\"https:\/\/notwp.org\">notwp.org<\/a>, click Submit To Mirror.  This will queue your site for additional the public mirror.<\/li>\n<\/ol>\n<h2>Code Signing<\/h2>\n<p>To facilitate code-signing, two things are required. The first is to use your private key and sign each of your release ZIP files. This can be accomplished via the WordPress admin via the Juniper side menu, under Repositories.  From here you can enter your private key password and click the &quot;Sign&quot; button, which will iterate through all your ZIP files and sign them locally.  At this point, all signed ZIP files will be served from your Juniper\/Author install.  Regular ZIP files can still be downloaded and processed as per normal, which means regular updates like Github Updater and Repo Man will still continue to work fine.  The signed ZIP files will be used at a later stage when Juniper\/Berry is completed.<\/p>\n<p>Second, you need to add a particular header onto your main plugin file, &quot;Authority&quot;.  An example is below:<\/p>\n<pre><code>Stable: 1.0.2\nAuthority: https:\/\/plugins.duanestorey.com<\/code><\/pre>\n<p>The website listed for the Authority needs to be the website where Juniper\/Author is installed, and it must be for a repository under control in the &quot;Repositories&quot; menu in Juniper. <\/p>\n<p>Once the plugin is installed on a WordPress website, Juniper\/Berry (when it's complete) will use the Authority information in the plugin header to determine where to retrieve the public key for future ZIP files for each release.  Once it retrieves it, it will be used to verify that the ZIP file came from that Juniper\/Author installation via that website, and also that the original hash\/integrity of the ZIP file is maintained.  If someone where to tamper with the ZIP file, or sign it with a different private key, both situations would fail the integrity check, and the new plugin would not be installed.  <\/p>\n<h2>Early Alpha<\/h2>\n<p>This is a very early version, with several missing features. That said, it's at the point where it needs a few alpha\/beta testers.  So if you have a public-facing (not local) website that you want to use as your main server for your Github plugins, then please install Juniper\/Author and provide some feedback via Github Issues.  Currently Juniper\/Author doesn't facilitate upgrades or the consumption of signed ZIP files, but this will be coming soon.<\/p>","stable_version":"1.0.5","repo_version":"1.0.5","banner_image_url":"https:\/\/raw.githubusercontent.com\/duanestorey\/juniper-author\/refs\/heads\/main\/assets\/banner-1544x500.jpg","requires_php":"6.0","requires_at_least":"6.0","tested_up_to":"6.7","signing_authority":"","open_issues_count":0,"stars_count":1,"total_downloads":11,"updated_at":1734978633,"created_at":1734978633},{"id":6,"site_id":2,"type":"plugin","name":"Barcodes for WooCommerce\u00ae","slug":"robertdevore\/barcodes-for-woocommerce","author_name":"Robert DeVore","author_url":"https:\/\/github.com\/robertdevore","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/9917957?v=4","description":"Generate and manage barcodes\/QR codes for WooCommerce orders and products.","readme":"<h1>Barcodes for WooCommerce\u00ae<\/h1>\n<p>Barcodes for WooCommerce\u00ae is a plugin designed to simplify order and product management by automatically generating unique QR codes for orders and products. <\/p>\n<p>These QR codes are integrated into the WooCommerce experience, including emails, admin pages, and customer-facing order details.<\/p>\n<p>This plugin is purposefully focused on QR codes for version <strong>0.0.1<\/strong>, and I'm seeking feedback from the community to determine which barcode formats would provide the most value in future releases. <\/p>\n<p>I'm aiming to prioritize features that are truly useful rather than adding every possible format or feature just because <em>you know who<\/em> does it.<\/p>\n<h2>Features<\/h2>\n<ul>\n<li><strong>Order QR Codes<\/strong>: Automatically generate QR codes for all new orders.<\/li>\n<li><strong>Product QR Codes<\/strong>: Generate unique QR codes for products without existing codes.<\/li>\n<li><strong>Email Integration<\/strong>: Include QR codes in customer order confirmation emails.<\/li>\n<li><strong>Admin Integration<\/strong>: Display QR codes in the admin order details page.<\/li>\n<li><strong>Shortcode Support<\/strong>: Display QR codes anywhere using the <code>[order_barcode]<\/code> shortcode.<\/li>\n<li><strong>AJAX Functionality<\/strong>: Lookup and generate QR codes dynamically.<\/li>\n<li><strong>Settings Page<\/strong>: Customize QR code settings, including color.<\/li>\n<\/ul>\n<h3>Planned Features<\/h3>\n<p>I want to hear from <strong>you<\/strong>! Let me know which barcode formats (e.g., Code128, EAN, UPC) you see most often and would like included in future versions.<\/p>\n<p>My goal is to keep the plugin lean and focus on the most practical use cases.<\/p>\n<h2>Installation<\/h2>\n<ol>\n<li>Download the plugin zip file from the <a href=\"https:\/\/github.com\/robertdevore\/barcodes-for-woocommerce\/releases\">releases page<\/a>.<\/li>\n<li>Upload the plugin to your WordPress site:\n<ul>\n<li>Navigate to <strong>Plugins<\/strong> &gt; <strong>Add New<\/strong>.<\/li>\n<li>Click <strong>Upload Plugin<\/strong> and choose the zip file.<\/li>\n<li>Click <strong>Install Now<\/strong> and then <strong>Activate<\/strong>.<\/li>\n<\/ul><\/li>\n<li>Configure the plugin settings:\n<ul>\n<li>Go to <strong>Barcodes<\/strong> in the WordPress admin menu.<\/li>\n<li>Customize settings as needed.<\/li>\n<\/ul><\/li>\n<\/ol>\n<h2>Usage<\/h2>\n<h3>Automatic QR Code Generation<\/h3>\n<ul>\n<li><strong>Orders<\/strong>: QR codes are generated automatically for all new orders.<\/li>\n<li><strong>Products<\/strong>: QR codes can be generated for products manually or in bulk via the <strong>Advanced Settings<\/strong> tab.<\/li>\n<\/ul>\n<h3>Display QR Codes<\/h3>\n<ul>\n<li><strong>Order Details<\/strong>: QR codes are displayed on the thank you page, in the admin dashboard, and in customer emails.<\/li>\n<li><strong>Shortcodes<\/strong>: Use <code>[order_barcode order_id=\"123\"]<\/code> to display an order's QR code anywhere on your site.<\/li>\n<\/ul>\n<h3>Email Integration<\/h3>\n<p>The plugin appends the order QR code to the customer order confirmation email for easy scanning and retrieval of order details.<\/p>\n<h2>Contributing<\/h2>\n<p>I welcome contributions! Here's how you can help:<\/p>\n<ol>\n<li>Fork the repository.<\/li>\n<li>Create a new feature branch: <code>git checkout -b feature\/my-feature<\/code>.<\/li>\n<li>Commit your changes: <code>git commit -m 'Add my feature'<\/code>.<\/li>\n<li>Push to the branch: <code>git push origin feature\/my-feature<\/code>.<\/li>\n<li>Open a pull request.<\/li>\n<\/ol>\n<h2>License<\/h2>\n<p>This plugin is licensed under the GPL-2.0+ license. See the <a href=\"http:\/\/www.gnu.org\/licenses\/gpl-2.0.txt\">LICENSE<\/a> file for more details.<\/p>","stable_version":"0.0.1","repo_version":"0.0.1","banner_image_url":"","requires_php":"","requires_at_least":"","tested_up_to":"","signing_authority":"","open_issues_count":0,"stars_count":1,"total_downloads":0,"updated_at":1734978633,"created_at":1734978633},{"id":9,"site_id":2,"type":"plugin","name":"Bluesky Feed for WordPress\u00ae","slug":"robertdevore\/bluesky-feed-for-wordpress","author_name":"Robert DeVore","author_url":"https:\/\/github.com\/robertdevore","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/9917957?v=4","description":"Showcase your latest Bluesky posts on your WordPress\u00ae site with customizable display options and seamless integration","readme":"<h1>Bluesky Feed for WordPress\u00ae<\/h1>\n<p>Showcase your recent Bluesky posts on your WordPress\u00ae website in a variety of ways. Display your Bluesky feed using a widget, shortcode, preview the feed in the admin settings, with customizable themes and display styles.<\/p>\n<hr \/>\n<h2>Features<\/h2>\n<ul>\n<li><strong>Widget Integration<\/strong>: Easily add your Bluesky feed to your website's sidebar or footer.<\/li>\n<li><strong>Shortcode Support<\/strong>: Place the feed anywhere on your site with <code>[bluesky_feed display=\"list|grid\"]<\/code>.<\/li>\n<li><strong>Admin Preview<\/strong>: See how your feed will look directly in the plugin settings page.<\/li>\n<li><strong>Customizable Themes<\/strong>: Choose from <code>light<\/code>, <code>dim<\/code>, or <code>dark<\/code> themes.<\/li>\n<li><strong>Grid or List Layouts<\/strong>: Choose between a list display or a grid layout with 3-4 posts per row.<\/li>\n<li><strong>Real-Time Fetching<\/strong>: Fetch your latest Bluesky posts via the official API.<\/li>\n<li><strong>Pin Filtering<\/strong>: Optionally include or exclude pinned posts.<\/li>\n<li><strong>Responsive Design<\/strong>: Feed styles adapt seamlessly across devices.<\/li>\n<li>\n<ul>\n<li>*<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h2>Installation<\/h2>\n<ol>\n<li>\n<p><strong>Download the Plugin<\/strong><br \/>\nClone or download the plugin from the <a href=\"https:\/\/github.com\/robertdevore\/bluesky-feed-for-wordpress\">GitHub repository<\/a>.<\/p>\n<\/li>\n<li>\n<p><strong>Upload to WordPress<\/strong><\/p>\n<ul>\n<li>Navigate to <strong>Plugins &gt; Add New<\/strong> in your WordPress admin.<\/li>\n<li>Click <strong>Upload Plugin<\/strong> and select the downloaded ZIP file.<\/li>\n<li>Click <strong>Install Now<\/strong> and <strong>Activate<\/strong>.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p><strong>Configure Settings<\/strong><\/p>\n<ul>\n<li>Go to <strong>Settings &gt; Bluesky Feed<\/strong>.<\/li>\n<li>Enter your Bluesky username and adjust display options.<\/li>\n<li>\n<ul>\n<li>*<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/li>\n<\/ol>\n<h2>Usage<\/h2>\n<h3>1. <strong>Widget<\/strong><\/h3>\n<p>Add the <strong>Bluesky Feed Widget<\/strong> from the <strong>Appearance &gt; Widgets<\/strong> section. Customize global settings in the plugin options.<\/p>\n<h3>2. <strong>Shortcode<\/strong><\/h3>\n<p>Use the <code>[bluesky_feed]<\/code> shortcode in any post or page.<br \/>\nAvailable attributes:<\/p>\n<ul>\n<li><code>display<\/code>: Choose between <code>list<\/code> (default) or <code>grid<\/code>.<\/li>\n<\/ul>\n<p>Example:<\/p>\n<pre><code>[bluesky_feed display=\"grid\"]<\/code><\/pre>\n<h3>3. <strong>Admin Preview<\/strong><\/h3>\n<p>Preview your feed directly in the settings page under <strong>Settings &gt; Bluesky Feed<\/strong>.<\/p>\n<hr \/>\n<h2>License<\/h2>\n<p>This plugin is licensed under the <strong>GPL-2.0+<\/strong>.<br \/>\nSee the <a href=\"http:\/\/www.gnu.org\/licenses\/gpl-2.0.txt\">LICENSE<\/a> file for details.<\/p>\n<hr \/>\n<h2>Acknowledgments<\/h2>\n<ul>\n<li>Built with \u2764\ufe0f by <a href=\"https:\/\/robertdevore.com\/\">Robert DeVore<\/a>.<\/li>\n<li>Icons powered by <a href=\"https:\/\/tabler-icons.io\/\">Tabler Icons<\/a>.<\/li>\n<\/ul>","stable_version":"1.0.0","repo_version":"1.0.0","banner_image_url":"","requires_php":"","requires_at_least":"","tested_up_to":"","signing_authority":"","open_issues_count":1,"stars_count":0,"total_downloads":0,"updated_at":1734978633,"created_at":1734978633}]